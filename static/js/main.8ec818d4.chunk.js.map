{"version":3,"sources":["redux.js","App.js","AppContainer.js","index.js"],"names":["initialState","items","sort","year","page","total_pages","data","state","arguments","length","undefined","action","type","Object","objectSpread","result","results","valueSort","valueYear","store","createStore","applyMiddleware","thunk","App","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","inherits","createClass","key","value","props","getMoves","prevProps","_this2","years","currentYear","Date","getFullYear","i","push","label","allPages","totalPages","pages","currentPage","react_default","a","createElement","react_select_browser_esm","onChange","changeSort","options","changeYear","map","item","index","title","src","backdrop_path","alt","className","onClick","changePage","Component","mapDispatchToProps","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","url","response","responseBody","wrap","_context","prev","next","fetch","sent","json","t0","console","log","stop","_x","AppContainer","connect","ReactDOM","render","es","document","getElementById"],"mappings":"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","file":"static/js/main.8ec818d4.chunk.js","sourcesContent":["import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nexport const ADD_RESULT = 'ADD_RESULT';\nexport const CHANGE_SORT = 'CHANGE_SORT';\nexport const CHANGE_YEAR = 'CHANGE_YEAR';\nexport const CHANGE_PAGE = 'CHANGE_PAGE';\n\nexport const addResult = result => ({\n  type: ADD_RESULT,\n  result,\n});\nexport const changeSort = valueSort => ({\n  type: CHANGE_SORT,\n  valueSort,\n});\nexport const changeYear = valueYear => ({\n  type: CHANGE_YEAR,\n  valueYear,\n});\nexport const changePage = page => ({\n  type: CHANGE_PAGE,\n  page,\n});\n\nexport const initialState = {\n  items: [],\n  sort: 'popularity',\n  year: '2019',\n  page: '1',\n  total_pages: '',\n};\nexport const data = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_RESULT':\n      return { ...state, items: action.result.results, total_pages: action.result.total_pages };\n    case 'CHANGE_SORT':\n      return { ...state, sort: action.valueSort };\n    case 'CHANGE_YEAR':\n      return { ...state, year: action.valueYear };\n    case 'CHANGE_PAGE':\n      return { ...state, page: action.page };\n    default:\n      return state;\n  }\n};\nexport const apiUrl = 'https://api.themoviedb.org/3/';\nexport const getMoves = (sort, year, page) => async (dispatch) => {\n  try {\n    const url = `${apiUrl}discover/movie?api_key=60c4a3ee893cd1db3cfe5838953ce4c1&language=en-US&sort_by=${sort}.desc&include_adult=false&include_video=false&page=${page}&year=${year}`;\n    const response = await fetch(url);\n    const responseBody = await response.json();\n    dispatch(addResult(responseBody));\n  } catch {\n    console.log('ERROR!');\n  }\n};\nexport function configureStore() {\n  const store = createStore(data, initialState, applyMiddleware(thunk));\n  return store;\n}\nexport const store = configureStore();\n","import React, { Component } from 'react';\nimport Select from 'react-select';\n\nexport class App extends Component {\n  state = {};\n\n  componentDidMount() {\n    this.props.getMoves(this.props.sort, this.props.year, this.props.page);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.sort !== prevProps.sort || this.props.year !== prevProps.year || this.props.page !== prevProps.page) {\n      this.props.getMoves(this.props.sort, this.props.year, this.props.page);\n    }\n  }\n\n  render() {\n    const options = [\n      { value: 'release_date', label: 'release date' },\n      { value: 'popularity', label: 'popularity' },\n      { value: 'revenue', label: 'revenue' },\n      { value: 'vote_average', label: 'vote average' },\n    ];\n    const years = [];\n    const currentYear = new Date().getFullYear();\n    for (let i = 2009; i <= currentYear; i++) {\n      years.push({ value: i, label: i });\n    }\n    const allPages = [];\n    const totalPages = this.props.total_pages;\n    for (let i = 0; i <= totalPages; i++) {\n      allPages.push(i);\n    }\n    const pages = [];\n    const currentPage = this.props.page;\n    if (currentPage < 6) {\n      for (let i = 1; i <= 7; i++) {\n        pages.push(i);\n      }\n      pages.push('...', totalPages - 1, totalPages);\n    } else if (currentPage <= 7) {\n      for (let i = 1; i <= 10; i++) {\n        pages.push(i);\n      }\n      pages.push('...', totalPages - 1, totalPages);\n    } else if (currentPage >= 8 && currentPage <= totalPages - 7) {\n      pages.push(1, 2, '...');\n      for (let i = currentPage - 3; i <= currentPage + 3; i++) {\n        pages.push(i);\n      }\n      pages.push('...', totalPages - 1, totalPages);\n    } else if (currentPage === totalPages - 6 ) {\n      pages.push(1, 2, '...');\n      for (let i = totalPages - 10; i <= totalPages; i++) {\n        pages.push(i);\n      }\n    } else if (currentPage > totalPages - 6) {\n      pages.push(1, 2, '...');\n      for (let i = totalPages - 6; i <= totalPages; i++) {\n        pages.push(i);\n      }\n    }\n    return (\n      <div>\n        <div>\n          <Select\n            onChange={(value) => { this.props.changeSort(value.value); }}\n            options={options}\n          />\n        </div>\n        <div>\n          <Select\n            onChange={(year) => { this.props.changeYear(year.value); }}\n            options={years}\n          />\n        </div>\n        <ul>\n          {this.props.items.map((item, index) => (\n            <li key={index}>\n              {item.title}\n              <br />\n              <img src={`https://image.tmdb.org/t/p/w300${item.backdrop_path}`} alt=\"img\" />\n            </li>\n          ))}\n        </ul>\n        <div>\n          <ul className=\"pagination\">\n            {pages.map((page, index) => (\n              <li key={index}>\n                <button\n                  type=\"button\"\n                  onClick={() => { if (page !== '...') { this.props.changePage(page); } }}\n                >\n                  {page}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { connect } from 'react-redux';\nimport {\n  getMoves,\n  data,\n  changeSort,\n  changeYear,\n  changePage,\n} from './redux';\nimport { App } from './App';\n\nconst mapStateToProps = state => ({\n  items: state.items,\n  sort: state.sort,\n  year: state.year,\n  page: state.page,\n  total_pages: state.total_pages,\n});\nconst mapDispatchToProps = {\n  getMoves,\n  data,\n  changeSort,\n  changeYear,\n  changePage,\n};\n\nexport const AppContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(App);\n\nexport default AppContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { AppContainer } from './AppContainer';\nimport './index.css';\nimport { store } from './redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}