{"version":3,"sources":["redux.js","App.js","index.js"],"names":["initialState","items","sort","year","data","state","arguments","length","undefined","action","type","Object","objectSpread","result","results","valueSort","valueYear","store","createStore","applyMiddleware","thunk","App","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","inherits","createClass","key","value","props","getMoves","prevProps","_this2","years","i","push","console","log","react_default","a","createElement","map","item","index","onClick","changeSort","changeYear","title","src","backdrop_path","alt","Component","mapDispatchToProps","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","url","response","responseBody","wrap","_context","prev","next","fetch","sent","json","t0","stop","_x","AppContainer","connect","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1dd870ae.chunk.js","sourcesContent":["import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nexport const ADD_RESULT = 'ADD_RESULT';\nexport const CHANGE_SORT = 'CHANGE_SORT';\nexport const CHANGE_YEAR = 'CHANGE_YEAR';\n\nexport const addResult = result => ({\n  type: ADD_RESULT,\n  result,\n});\nexport const changeSort = valueSort => ({\n  type: CHANGE_SORT,\n  valueSort,\n});\nexport const changeYear = valueYear => ({\n  type: CHANGE_YEAR,\n  valueYear,\n});\nexport const initialState = {\n  items: [],\n  sort: 'popularity',\n  year: '',\n};\nexport const data = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_RESULT':\n      return { ...state, items: action.result.results };\n    case 'CHANGE_SORT':\n      return { ...state, sort: action.valueSort };\n    case 'CHANGE_YEAR':\n      return { ...state, year: action.valueYear };\n    default:\n      return state;\n  }\n};\nexport const getMoves = (sort, year) => async (dispatch) => {\n  try {\n    const url = `https://api.themoviedb.org/3/discover/movie?api_key=60c4a3ee893cd1db3cfe5838953ce4c1&language=en-US&sort_by=${sort}.desc&include_adult=false&include_video=false&page=1&year=${year}`;\n    const response = await fetch(url);\n    const responseBody = await response.json();\n    dispatch(addResult(responseBody));\n  } catch {\n    console.log('ERROR!');\n  }\n};\nexport function configureStore() {\n  const store = createStore(data, initialState, applyMiddleware(thunk));\n  return store;\n}\nexport const store = configureStore();\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getMoves, data, changeSort, changeYear } from './redux';\n\nexport class App extends Component {\n  state = {};\n\n  componentDidMount() {\n    this.props.getMoves(this.props.sort);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.sort !== prevProps.sort || this.props.year !== prevProps.year) {\n      this.props.getMoves(this.props.sort, this.props.year);\n    }\n  }\n\n  render() {\n    const sortBy = ['release_date', 'popularity', 'revenue', 'vote_average', 'vote_count'];\n    const years = [];\n    for (let i = 2009; i < 2019; i++) {\n      years.push(i);\n    };\n    console.log(years);\n    return (\n      <div>\n        <div>\n          <ul>\n            {sortBy.map((item, index) => (\n            <li key={index}>\n              <button\n                type=\"button\"\n                onClick={() => this.props.changeSort(item)}\n              >\n                {item}\n              </button>\n            </li>\n            ))}\n          </ul>\n        </div>\n        <div>\n          <ul>\n            {years.map((year, index) => (\n            <li key={index}>\n              <button\n                type=\"button\"\n                onClick={() => this.props.changeYear(year)}\n              >\n                {year}\n              </button>\n            </li>\n            ))}\n          </ul>\n        </div>\n        <ul>\n          {this.props.items.map((item, index) => (\n            <li key={index}>\n              {item.title}\n              <br />\n              <img src={`https://image.tmdb.org/t/p/w300${item.backdrop_path}`} alt=\"img\" />\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({ items: state.items, sort: state.sort, year: state.year });\nconst mapDispatchToProps = { getMoves, data, changeSort, changeYear };\nconst AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);\n\nexport default AppContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport AppContainer from './App';\nimport './index.css';\n\n// Add these imports - Step 1\nimport { store } from './redux';\n\n// Wrap existing app in Provider - Step 2\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}