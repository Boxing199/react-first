{"version":3,"sources":["redux.js","App.js","index.js"],"names":["reducers","combineReducers","geod","state","arguments","length","undefined","action","type","store","initialState","createStore","configureStore","App","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","value","_this","react_default","a","createElement","props","title","onClick","closeGeod","activateGeod","React","Component","mapDispatchToProps","AppContainer","connect","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"2MA2BaA,EAAWC,YAAgB,CACtCC,KAZkB,WAAwB,IAAvBC,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1C,OAAQC,EAAOC,MACb,IAAK,gBACH,OAAOD,EAAOL,KAChB,IAAK,aACH,MAAO,GACT,QACE,OAAOC,MAcN,IAAMM,EALN,WAA2C,IAAnBC,EAAmBN,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAE5C,OADcO,YAAYX,EAAUU,GAIjBE,2CChCRC,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAb,YAAA,OAAAW,OAAAM,EAAA,EAAAN,CAAAF,EAAAC,GAAAC,OAAAO,EAAA,EAAAP,CAAAF,EAAA,EAAAU,IAAA,SAAAC,MAAA,WACW,IAAAC,EAAAR,KACP,OACES,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKX,KAAKY,MAAM3B,KAAK4B,OAAS,gBAE7Bb,KAAKY,MAAM3B,KAAK4B,MACfJ,EAAAC,EAAAC,cAAA,UAAQG,QAASd,KAAKY,MAAMG,WAA5B,aAEAN,EAAAC,EAAAC,cAAA,UACEG,QAAS,kBACPN,EAAKI,MAAMI,aAAa,CAAEH,MAAO,uBAFrC,kBATVjB,EAAA,CAAyBqB,IAAMC,WA2BzBC,EAAqB,CACzBH,aD3B0B,SAAA/B,GAAI,MAAK,CACnCM,KAAM,gBACNN,SC0BA8B,UDvBuB,iBAAO,CAC9BxB,KAAM,gBC8BO6B,EALMC,YATG,SAAAnC,GAAK,MAAK,CAChCD,KAAMC,EAAMD,OAUZkC,EAFmBE,CAGnBzB,SC9BF0B,IAASC,OACPd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAUhC,MAAOA,GACfiB,EAAAC,EAAAC,cAACc,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.ab1c309b.chunk.js","sourcesContent":["import {\n  combineReducers,\n  createStore,\n} from 'redux';\n\n// actions.js\nexport const activateGeod = geod => ({\n  type: 'ACTIVATE_GEOD',\n  geod,\n});\n\nexport const closeGeod = () => ({\n  type: 'CLOSE_GEOD',\n});\n\n// reducers.js\nexport const geod = (state = {}, action) => {\n  switch (action.type) {\n    case 'ACTIVATE_GEOD':\n      return action.geod;\n    case 'CLOSE_GEOD':\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const reducers = combineReducers({\n  geod,\n});\n\n// store.js\nexport function configureStore(initialState = {}) {\n  const store = createStore(reducers, initialState);\n  return store;\n}\n\nexport const store = configureStore();\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { activateGeod, closeGeod } from './redux';\n\n// App.js\nexport class App extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>{this.props.geod.title || 'Hello World!'}</h1>\n\n        {this.props.geod.title ? (\n          <button onClick={this.props.closeGeod}>Exit Geod</button>\n        ) : (\n          <button\n            onClick={() =>\n              this.props.activateGeod({ title: 'I am a geo dude!' })\n            }\n          >\n            Click Me!\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\n// AppContainer.js\nconst mapStateToProps = state => ({\n  geod: state.geod,\n});\n\nconst mapDispatchToProps = {\n  activateGeod,\n  closeGeod,\n};\n\nconst AppContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(App);\n\nexport default AppContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux';\nimport App from './App';\nimport './index.css';\n\n// Add these imports - Step 1\n\n// Wrap existing app in Provider - Step 2\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}