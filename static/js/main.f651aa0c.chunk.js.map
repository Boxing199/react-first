{"version":3,"sources":["redux.js","App.js","index.js"],"names":["reducers","combineReducers","repos","state","arguments","length","undefined","action","type","store","initialState","createStore","applyMiddleware","thunk","configureStore","App","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","username","updateRepoList","props","getRepos","inherits","createClass","key","value","_this2","react_default","a","createElement","onChange","ev","setState","target","placeholder","onClick","map","repo","index","href","html_url","name","Component","mapDispatchToProps","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","url","response","responseBody","wrap","_context","prev","next","fetch","sent","json","t0","console","error","stop","_x","AppContainer","connect","ownProps","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f651aa0c.chunk.js","sourcesContent":["import { applyMiddleware, combineReducers, createStore } from 'redux';\n\nimport thunk from 'redux-thunk';\n\n// actions.js\nexport const addRepos = repos => ({\n  type: 'ADD_REPOS',\n  repos,\n});\n\nexport const clearRepos = () => ({ type: 'CLEAR_REPOS' });\n\nexport const getRepos = username => async dispatch => {\n  try {\n    const url = `https://api.github.com/users/${username}/repos?sort=updated`;\n    const response = await fetch(url);\n    const responseBody = await response.json();\n    dispatch(addRepos(responseBody));\n  } catch (error) {\n    console.error(error);\n    dispatch(clearRepos());\n  }\n};\n\n// reducers.js\nexport const repos = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_REPOS':\n      return action.repos;\n    case 'CLEAR_REPOS':\n      return [];\n    default:\n      return state;\n  }\n};\n\nexport const reducers = combineReducers({ repos });\n\n// store.js\nexport function configureStore(initialState = {}) {\n  const store = createStore(reducers, initialState, applyMiddleware(thunk));\n  return store;\n}\n\nexport const store = configureStore();\n","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\n\nimport { getRepos } from './redux';\n\n// App.js\nexport class App extends Component {\n  state = { username: 'tylerbuchea' };\n\n  componentDidMount() {\n    this.updateRepoList(this.state.username);\n  }\n\n  updateRepoList = username => this.props.getRepos(username);\n\n  render() {\n    return (\n      <div>\n        <h1>I AM AN ASYNC APP!!!</h1>\n\n        <strong>Github username: </strong>\n        <input\n          type=\"text\"\n          value={this.state.username}\n          onChange={ev => this.setState({ username: ev.target.value })}\n          placeholder=\"Github username...\"\n        />\n        <button onClick={() => this.updateRepoList(this.state.username)}>\n          Get Lastest Repos\n        </button>\n\n        <ul>\n          {this.props.repos.map((repo, index) => (\n            <li key={index}>\n              <a href={repo.html_url} target=\"_blank\">\n                {repo.name}\n              </a>\n            </li>\n          ))}\n        </ul>\n\n      </div>\n    );\n  }\n}\n\n// AppContainer.js\nconst mapStateToProps = (state, ownProps) => ({ repos: state.repos });\nconst mapDispatchToProps = { getRepos };\nconst AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);\n\nexport default AppContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport AppContainer from './App';\nimport './index.css';\n\n// Add these imports - Step 1\nimport { store } from './redux';\n\n// Wrap existing app in Provider - Step 2\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}