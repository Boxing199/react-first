{"version":3,"sources":["redux.js","App.js","index.js"],"names":["initialState","items","sort","data","state","arguments","length","undefined","action","type","Object","objectSpread","result","results","valueSort","store","createStore","applyMiddleware","thunk","App","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","inherits","createClass","key","value","props","getMoves","prevProps","_this2","react_default","a","createElement","map","item","index","onClick","changeSort","title","src","backdrop_path","alt","Component","mapDispatchToProps","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","url","response","responseBody","wrap","_context","prev","next","fetch","sent","json","t0","console","log","stop","_x","AppContainer","connect","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.af2fa851.chunk.js","sourcesContent":["import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nexport const ADD_RESULT = 'ADD_RESULT';\nexport const CHANGE_SORT = 'CHANGE_SORT';\n\nexport const addResult = result => ({\n  type: ADD_RESULT,\n  result,\n});\nexport const changeSort = valueSort => ({\n  type: CHANGE_SORT,\n  valueSort,\n});\nexport const initialState = {\n  items: [],\n  sort: 'popularity',\n};\nexport const data = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_RESULT':\n      return { ...state, items: action.result.results };\n    case 'CHANGE_SORT':\n      return { ...state, sort: action.valueSort };\n    default:\n      return state;\n  }\n};\nexport const getMoves = sort => async (dispatch) => {\n  try {\n    const url = `https://api.themoviedb.org/3/discover/movie?api_key=60c4a3ee893cd1db3cfe5838953ce4c1&language=en-US&sort_by=${sort}.desc&include_adult=false&include_video=false&page=1`;\n    const response = await fetch(url);\n    const responseBody = await response.json();\n    dispatch(addResult(responseBody));\n  } catch {\n    console.log('ERROR!');\n  }\n};\nexport function configureStore() {\n  const store = createStore(data, initialState, applyMiddleware(thunk));\n  return store;\n}\nexport const store = configureStore();\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getMoves, data, changeSort } from './redux';\n\nexport class App extends Component {\n  state = {};\n\n  componentDidMount() {\n    this.props.getMoves(this.props.sort);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.sort !== prevProps.sort) {\n      this.props.getMoves(this.props.sort);\n    }\n  }\n\n  render() {\n    const sortBy = ['release_date', 'popularity', 'revenue'];\n    return (\n      <div>\n        <div>\n          <ul>\n            {sortBy.map((item, index) => (\n            <li key={index}>\n              <button\n                type=\"button\"\n                onClick={() => this.props.changeSort(item)}\n              >\n                {item}\n              </button>\n            </li>\n            ))}\n          </ul>\n        </div>\n        <ul>\n          {this.props.items.map((item, index) => (\n            <li key={index}>\n              {item.title}\n              <br />\n              <img src={`https://image.tmdb.org/t/p/w300${item.backdrop_path}`} alt=\"img\" />\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({ items: state.items, sort: state.sort });\nconst mapDispatchToProps = { getMoves, data, changeSort };\nconst AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);\n\nexport default AppContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport AppContainer from './App';\nimport './index.css';\n\n// Add these imports - Step 1\nimport { store } from './redux';\n\n// Wrap existing app in Provider - Step 2\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}